# schemaName: #逻辑数据源名称

# dataSources: #数据源配置，可配置多个data_source_name
#   <data_source_name>: #与Sharding-JDBC配置不同，无需配置数据库连接池
#     url: #数据库url连接
#     username: #数据库用户名
#     password: #数据库密码
#     autoCommit: true #hikari连接池默认配置
#     connectionTimeout: 30000 #hikari连接池默认配置
#     idleTimeout: 60000 #hikari连接池默认配置
#     maxLifetime: 1800000 #hikari连接池默认配置
#     maximumPoolSize: 65 #hikari连接池默认配置

# shardingRule: #省略数据分片配置
#####################################################

schemaName: sharding_db

dataSources:
  ds0: 
    url: jdbc:mysql://localhost:3306/ds0
    username: root
    password: root
    autoCommit: true
    connectionTimeout: 30000
    idleTimeout: 60000
    maxLifetime: 1800000
    maximumPoolSize: 65
  ds1:
    url: jdbc:mysql://localhost:3306/ds1
    username: root
    password: root
    autoCommit: true
    connectionTimeout: 30000
    idleTimeout: 60000
    maxLifetime: 1800000
    maximumPoolSize: 65

shardingRule:  
  tables:
    t_order: 
      actualDataNodes: ds${0..1}.t_order${0..1}
      databaseStrategy:
        inline:
          shardingColumn: user_id
          algorithmExpression: ds${user_id % 2}
      tableStrategy: 
        inline:
          shardingColumn: order_id
          algorithmExpression: t_order${order_id % 2}
      keyGeneratorColumnName: order_id
    t_order_item:
      actualDataNodes: ds${0..1}.t_order_item${0..1}
      databaseStrategy:
        inline:
          shardingColumn: user_id
          algorithmExpression: ds${user_id % 2}
      tableStrategy:
        inline:
          shardingColumn: order_id
          algorithmExpression: t_order_item${order_id % 2}  
  bindingTables:
    - t_order,t_order_item
  defaultTableStrategy:
    none:
  defaultKeyGeneratorClassName: io.shardingsphere.core.keygen.DefaultKeyGenerator